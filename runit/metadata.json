{
  "name": "runit",
  "description": "Installs runit and provides runit_service definition",
  "long_description": "Description\n===========\n\nInstalls runit and provides LWRP for managing runit services.\n\n* http://smarden.org/runit/\n\nRequirements\n============\n\nWorks on Debian, Ubuntu and Gentoo\n\nAttributes\n==========\n\nFor description of the attributes, see the cookbook metadata.\n\nResource/Provider\n=================\n\nThis cookbook includes an LWRP for managing runit services.\n\nActions:\n\n- *start* - starts the service\n- *stop* - stops the service\n- *enable* - enables the service, creating the run scripts and symlinks\n- *disable* - downs the service and removes the service symlink\n- *restart* - restarts the service\n- *reload* - reloads the service with force-reload\n- *once* - starts the service once\n- *hup* - sends the hup signal to the service\n- *cont* - sends the cont signal to the service\n- *term* - sends the term signal to the service\n- *kill* - sends the kill signal to the service\n\nService management actions are taken with runit's \"sv\" program.\n\nParameter Attributes\n\n- *service_name* - name of the service - name attribute\n- *directory* - directory where the service configuration lives\n- *control* - customize control of the service, see runsv man page\n- *options* - options passed as variables to templates, for compatibility with legacy runit service definition\n- *variables* - uses the options hash to pass variables to templates\n- *env* - environment values to pass via the service's env directory\n- *log* - whether to start the service's logger with svlogd, requires a template `sv-service_name-log-run.erb` to configure the logs run script\n- *cookbook* - cookbook where templates should be located instead of where the LWRP is used\n- *template* - name of the template, defaults to `service_name`, set to false to not render a template (e.g. if a package supplies its own runit scripts)\n- *finish* - whether the service has a finish script, requires a template `sv-service_name-finish.erb`\n- *owner* - user that should own the templates created to enable the service\n- *group* - group that should own the templates created to enable the service\n\nrunsv(8) man page is available online:\n\n* http://smarden.org/runit/runsv.8.html\n\nsvlogd(8) man page is available online:\n\n* http://smarden.org/runit/svlogd.8.html\n\nUsage\n=====\n\nInclude the runit recipe in a node's run list, or in a role to install runit as a package on the system. The LWRP doesn't include the runit recipe, so ensure that the recipe is included before using the LWRP, in addition to including a cookbook dependency.\n\nExample usage of the `runit_service` LWRP:\n\n    runit_service \"chef-client\" do\n      action [:enable, :start]\n      directory \"/etc/sv/chef-client\"\n      log true\n    end\n\nLicense and Author\n==================\n\nAuthor: Joshua Timberman (<joshua@opscode.com>)\n\nCopyright 2008-2011, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "maintainer": "Opscode, Inc.",
  "maintainer_email": "cookbooks@opscode.com",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": [

    ],
    "debian": [

    ],
    "gentoo": [

    ]
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "runit": {
      "display_name": "Runit",
      "description": "Hash of runit attributes",
      "type": "hash",
      "choice": [

      ],
      "calculated": false,
      "required": "optional",
      "recipes": [

      ]
    },
    "runit/sv_bin": {
      "display_name": "Runit sv bin",
      "description": "Location of the sv binary",
      "default": "/usr/bin/sv",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "runit/chpst_bin": {
      "display_name": "Runit chpst bin",
      "description": "Location of the chpst binary",
      "default": "/usr/bin/chpst",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "runit/service_dir": {
      "display_name": "Runit service directory",
      "description": "Symlinks to services managed under runit",
      "default": "/etc/service",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "runit/sv_dir": {
      "display_name": "Runit sv directory",
      "description": "Location of services managed by runit",
      "default": "/etc/sv",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    }
  },
  "groupings": {
  },
  "recipes": {
    "runit": "Installs and configures runit"
  },
  "version": "0.99.0"
}